import os
from telegram import Update, ReplyKeyboardRemove
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
CLIENT_INFO, AGENT_INFO = range(2)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ú–∞–∫—Å–∏–º–∞ –ù–µ–∫—Ä–∞—Å–æ–≤–∞.\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏ —É—Å–ª—É–≥—É (–ø—Ä–æ–¥–∞–∂–∞ –∏–ª–∏ –ø–æ–∫—É–ø–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏)."
    )
    return CLIENT_INFO

async def client_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["client_info"] = update.message.text
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ –∫–∞—Ä—Ç–µ) –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞.\n"
        "–î–µ–Ω—å–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ —Å–¥–µ–ª–∫–∏!"
    )
    return AGENT_INFO

async def agent_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["agent_info"] = update.message.text

    client_info = context.user_data["client_info"]
    agent_info = context.user_data["agent_info"]

    await update.message.reply_text(
        f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!\n\n"
        f"üìû –ö–ª–∏–µ–Ω—Ç: {client_info}\n"
        f"üí≥ –ê–≥–µ–Ω—Ç: {agent_info}\n"
        "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏."
    )
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

if __name__ == '__main__':
    token = os.getenv("8334436860:AAH_kaoR2BIYeetZ6n-eweHTq_TBN07O6YI")
    app = ApplicationBuilder().token(token).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            CLIENT_INFO: [MessageHandler(filters.TEXT & ~filters.COMMAND, client_info)],
            AGENT_INFO: [MessageHandler(filters.TEXT & ~filters.COMMAND, agent_info)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.run_polling()
